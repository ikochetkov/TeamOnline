<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $rootScope, $location, $timeout, spUtil, glideFormFactory, spAriaUtil, spAriaFocusManager, $uibModal, spModal) {

	var c = this;
	var d = $scope.data

	$scope.contextMenu = function (sys_id) {
		if (!d.canEdit) { return [] }
		return [
			['Edit item', function ($itemScope) {

				d.sys_id = sys_id;
				d.action = 'editItem';
				spUtil.update($scope).then(function () {
					var flatFields = [];
					angular.forEach(d.f._fields, function (field) {
						flatFields.push(field);
					});


					var g_form = glideFormFactory.create($scope, d.f.table, d.f.sys_id, flatFields, null, { uiMessageHandler: uiMessageHandler });

					$scope.getGlideForm = function () {
						return g_form;
					}

					var uiMessageHandler = function (g_form, type, message) {
						switch (type) {
							case 'addInfoMessage':
								spUtil.addInfoMessage(message);
								break;
							case 'addErrorMessage':
								spUtil.addErrorMessage(message);
								break;
							case 'clearMessages':
								break;
							default:
						}
					};
					$scope.editImage(d.sys_id);

				});
			}]
		]
	}
	$rootScope.$on('ImageLibrary.imageSelected', function (event, respData) {
		if(d.f && d.f._fields){
			d.f._fields.background.value = respData.sys_id;
			d.f._fields.background.displayValue = respData.name;
			//spUtil.addInfoMessage('New background selected!');
		}
	})

	$scope.editImage = function () {
		$scope.modalInstance = $uibModal.open({
			animation: true,
			templateUrl: 'goal_editor.html',
			size: 'lg',
			backdrop: false,
			scope: $scope
		});
	};
	$scope.closeEdit = function () {
		$scope.modalInstance.close();
		spUtil.update($scope);
	}
	$scope.saveRecord = function () {
		d.action = "saveItem";
		spUtil.update($scope).then(function (response) {
			$scope.closeEdit();
		});
	}
	$scope.getClass = function (block) {
		return block.fitType;
	}
	var gallery = document.getElementsByClassName('goal-gallery')[0];
	$scope.openImage = function (img) {
		$scope.data.selectedImg = img;
		gallery.classList.add('active')
	}
	$scope.closeGallery = function () {
		gallery.classList.remove('active')
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.company-goals-container {&#13;
  margin-top: 3px;&#13;
}&#13;
.rally-wrapper,&#13;
.goals-wrapper {&#13;
  margin: 0;&#13;
  height: 25em;&#13;
  background-color: #f3f3f4;&#13;
  width: calc(50% - 1px);&#13;
  overflow: hidden;&#13;
}&#13;
.absolute {&#13;
  margin: auto;&#13;
  object-fit: cover;&#13;
}&#13;
.goals-img {&#13;
  z-index: 1;&#13;
  -moz-transition: all 1s ease-out;&#13;
  -o-transition: all 1s ease-out;&#13;
  -webkit-transition: all 1s ease-out;&#13;
&#13;
  &amp;:hover {&#13;
    -webkit-transform: scale(1.1);&#13;
    -moz-transform: scale(1.1);&#13;
    -o-transform: scale(1.1);&#13;
  }&#13;
}&#13;
.goals-content {&#13;
  z-index: 2;&#13;
}&#13;
.pictures-container {&#13;
  margin: 5px 15px 5px 15px;&#13;
  display: flex;&#13;
  flex-wrap: nowrap;&#13;
  justify-content: space-between;&#13;
  gap: 1px;&#13;
}&#13;
.company-goals-header {&#13;
  background-color: white;&#13;
  position: relative;&#13;
  text-align: center;&#13;
  font-size: 24px;&#13;
  margin: 0px 15px 0px 15px;&#13;
  padding: 2rem 0;&#13;
  line-height: 1;&#13;
  text-transform: uppercase;&#13;
  letter-spacing: 1.5px;&#13;
  &amp;:after {&#13;
    content: "";&#13;
    position: absolute;&#13;
    bottom: 14px;&#13;
    left: 42%;&#13;
    height: 2px;&#13;
    width: 86px;&#13;
    background: #91c712;&#13;
  }&#13;
}&#13;
.by_height {&#13;
  height: 100%;&#13;
  max-width: 100%;&#13;
  object-fit: cover;&#13;
}&#13;
.by_width {&#13;
  max-height: 100%;&#13;
  width: 100%;&#13;
  object-fit: cover;&#13;
}&#13;
.goal-gallery {&#13;
  z-index: 1000;&#13;
  position: fixed;&#13;
  top: 0;&#13;
  left: 0;&#13;
  width: 100vw;&#13;
  height: 100vh;&#13;
  visibility: hidden;&#13;
  opacity: 0;&#13;
  transition: 100ms ease-in-out;&#13;
  background-color: rgba(0, 0, 0, 0.6);&#13;
  &amp;.active {&#13;
    visibility: visible;&#13;
    opacity: 1;&#13;
    transition: 300ms ease-in-out;&#13;
  }&#13;
  .image-preview {&#13;
    display: flex;&#13;
    transition: 300ms ease-in-out;&#13;
    justify-content: center;&#13;
    align-items: center;&#13;
    height: 100%;&#13;
    .image-container {&#13;
      width: 70vw;&#13;
      height: 70vh;&#13;
    }&#13;
  }&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) { 

 }]]></link>
        <name>TeamOnline Comapny Goals</name>
        <option_schema>[{"hint":"Header title text","name":"title","section":"other","label":"Title","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
  /* populate the 'data' object */
  data.table = 'x_aaro2_teamonline_blocks_config';
  data.imageLibrary = $sp.getWidget('image_library');

  data.canEdit = gs.getUser().isMemberOf(gs.getProperty("x_aaro2_teamonline.teamonline_administration_group")) || gs.hasRole("admin");
  data.company_goals = {};
  data.rally_cry = {};

  if (input && input.action === 'editItem') {
    data.sys_id = input.sys_id;
    data.f = $sp.getForm(data.table, input.sys_id, '', 'rallyCryCompanyGoals');
  }
  if (input && input.action === 'saveItem') {
    $sp.saveRecord(input.table, input.sys_id, input.f._fields);
  }

  getBlocks();

  function getBlocks() {
    var blocksGr = new GlideRecord(data.table);
    blocksGr.addQuery('type', 'rally_cry').addOrCondition('type', 'company_goals');
    blocksGr.query();
    while (blocksGr.next()) {
      data[blocksGr.getValue('type')] = getBlockObject(blocksGr);
    }
  }
  function getBlockObject(gr) {
    var block = {
      sys_id: gr.getUniqueValue(),
      image: gr.getDisplayValue('background'),
      fitType: gr.getValue('fit_type')
    };
    return block;
  }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>andrey.mironyuk</sys_created_by>
        <sys_created_on>2020-06-04 09:50:27</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>2717fb73db4910908f26550a4896195d</sys_id>
        <sys_mod_count>143</sys_mod_count>
        <sys_name>TeamOnline Comapny Goals</sys_name>
        <sys_package display_value="TEAMonline" source="x_aaro2_teamonline">a2dfc25fdb7244105f65ba03e29619fa</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TEAMonline">a2dfc25fdb7244105f65ba03e29619fa</sys_scope>
        <sys_update_name>sp_widget_2717fb73db4910908f26550a4896195d</sys_update_name>
        <sys_updated_by>xxikochet</sys_updated_by>
        <sys_updated_on>2020-08-05 14:39:12</sys_updated_on>
        <template><![CDATA[<div class="company-goals-container">
  <div class="row">
    <div class="pictures-container col-12">
      <div class="rally-wrapper" ng-click="openImage(data.rally_cry.image)">
        <a context-menu=" contextMenu(data.rally_cry.sys_id)" ng-href="" class="know-how post">
          <img ng-src={{data.rally_cry.image}} alt="rally cry" class="absolute goals-img"
            ng-class="getClass(data.rally_cry)">
        </a>
      </div>
      <div class="goals-wrapper" ng-click="openImage(data.company_goals.image)">
        <a context-menu="contextMenu(data.company_goals.sys_id)" ng-href="" class="know-how post">
          <img ng-src={{data.company_goals.image}} alt="company goals" class="absolute goals-img"
            ng-class="getClass(data.company_goals)">
        </a>
      </div>
    </div>
  </div>
</div>
<div class="goal-gallery " ng-click="closeGallery()">
  <div class="image-preview">
    <div class="image-container"
      ng-style="{'background': 'url('+data.selectedImg+')', 'background-position': '50% 50%', 'background-repeat': 'no-repeat','background-size': 'contain'}">
    </div>

  </div>
</div>]]></template>
    </sp_widget>
</record_update>
