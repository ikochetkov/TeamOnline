<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil, $rootScope) {
  var c = this;
  c.lastPage = false;
  $scope.previousDateTime = '';
  c.filter = c.data.filter;
  
  $rootScope.$on('filterChanged', (evt, data) => {
    c.user = data.user;
    c.store = data.store;
    c.caption = data.caption,
    c.filter = data.filter
    setFilter(data.filter)
  })

  $rootScope.$on('approvalsUpdated', () =>{
    console.log('approvalsUpdated received')
    if(c.filter === 'approvals')
      setFilter('approvals');
  })
  function setFilter(filter) {
    $scope.previousDateTime = ''
    $rootScope.$broadcast('loadingStart');
    c.lastPage = false;
    scrollTop()
    c.filter = filter;
    $scope.loading = true;

    const payload = {
      filter: c.filter,
      count: 9,
      user: c.user,
      store: c.store,
      caption: c.caption,
      action: 'loading',
    }
    c.server.get(payload).then(resp => {
      $rootScope.$broadcast('loadingEnd');
      $scope.loading = false;
      if (resp.data.nextMoments.length == 0) {
        c.data.moments = [];
        return;
      }
      c.data.moments = resp.data.nextMoments;
     

      $scope.loadMore(true, true)
    })
  }

  $scope.loadMore = (last, inview) => {
    if (!(last && inview) || c.lastPage) return;

    const payload = {
      lastDateTime: c.data.moments[c.data.moments.length - 1].data.created_on,
      filter: c.filter,
      count: 3,
      user: c.user || '',
      store: c.store || '',
      caption: c.caption || '',
      action: 'loading'
    }
    if ($scope.previousDateTime === payload.lastDateTime) 
      return;
    

    c.server.get(payload).then(resp => {
      $scope.previousDateTime = payload.lastDateTime;
      if (resp.data.nextMoments.length == 0){
        c.lastPage = true;
        console.log('last page ',c.lastPage)
      }
      c.data.moments = [...c.data.moments, ...resp.data.nextMoments]
    })
  }

  function scrollTop() {
    var container = document.getElementsByClassName('moments-grid-container')[0];
    if (container)
      container.scrollTop = 0;
  }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>$blue: #0069c8;&#13;
$darkgrey: #2f2f2f;&#13;
&#13;
.no-moments-message{&#13;
  width: 100%;&#13;
  background-color: white;&#13;
  display: flex;&#13;
  place-content: center;&#13;
  place-items: center;&#13;
  font-size: 3rem;&#13;
}&#13;
.moments-grid-container {&#13;
  display: flex;&#13;
  flex-flow: row wrap;&#13;
  justify-content: flex-start;&#13;
  max-height: 81vh;&#13;
  min-height: 81vh;&#13;
  overflow-y: auto;&#13;
  position: relative;&#13;
  transition: all .3s ease-in-out;&#13;
  &amp;::-webkit-scrollbar {&#13;
    width: 0.5em;&#13;
  }&#13;
  &amp;::-webkit-scrollbar-thumb {&#13;
    background-color: darkgrey;&#13;
  }&#13;
}&#13;
&#13;
$blue: #0069c8;&#13;
#moments-container {&#13;
  margin-bottom: 10px;&#13;
}&#13;
&#13;
.moment {&#13;
  width: 36.4rem;&#13;
  margin: 5px;&#13;
  transition: all 300ms ease-in-out;&#13;
  &amp;.inactive {&#13;
    filter: grayscale(1);&#13;
  }&#13;
  &amp;.ng-enter,&#13;
  &amp;.ng-leave,&#13;
  &amp;.ng-move {&#13;
    transition: 0.5s linear all;&#13;
  }&#13;
&#13;
  &amp;.ng-enter,&#13;
  &amp;.ng-move {&#13;
    opacity: 0;&#13;
  }&#13;
&#13;
  &amp;.ng-enter.ng-enter-active,&#13;
  &amp;.ng-move.ng-move-active {&#13;
    opacity: 1;&#13;
  }&#13;
&#13;
  &amp;.ng-leave {&#13;
    opacity: 1;&#13;
  }&#13;
&#13;
  &amp;.ng-leave.ng-leave-active {&#13;
    opacity: 0;&#13;
  }&#13;
}&#13;
.approve-buttons-container {&#13;
  .btn {&#13;
    transition: all 0.3s ease-in-out;&#13;
    background: none;&#13;
    font-weight: 100;&#13;
  }&#13;
  .approve {&#13;
    color: green;&#13;
    &amp;:hover {&#13;
      background-color: #eee;&#13;
    }&#13;
  }&#13;
  .reject {&#13;
    color: red;&#13;
    &amp;:hover {&#13;
      background-color: #eee;&#13;
    }&#13;
  }&#13;
}&#13;
.comment-input-container {&#13;
  .input-group {&#13;
    border-top: 1px solid #eee;&#13;
  }&#13;
  input {&#13;
    border: none;&#13;
  }&#13;
}&#13;
.gallery-container {&#13;
  .caption-container {&#13;
    display: flex;&#13;
    justify-content: flex-start;&#13;
    align-content: flex-start;&#13;
    padding: 9px;&#13;
    flex-wrap: wrap;&#13;
    flex-grow: 1;&#13;
  }&#13;
}&#13;
.approval-state {&#13;
  font-size: 1rem;&#13;
  text-align: right;&#13;
  flex-grow: 1;&#13;
}&#13;
.moment-image-container {&#13;
  width: 100%;&#13;
  height: 27.2rem;&#13;
  display: flex;&#13;
  place-content: center;&#13;
  justify-content: center;&#13;
}&#13;
.loader-container {&#13;
  position: absolute;&#13;
  top: 0;&#13;
  left: 0;&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  display: flex;&#13;
  justify-content: center;&#13;
  transition: all .3s ease-in-out;&#13;
  background-color: white;&#13;
  z-index: 16;&#13;
  opacity: 1;&#13;
  &amp;.ng-hide-add,&#13;
  &amp;.ng-hide-remove {&#13;
    transition: all .3s linear ;&#13;
  }&#13;
  &amp;.ng-hide {&#13;
    opacity: 0;&#13;
  }&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>teamonline_moments_grid</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) { 

 }]]></link>
        <name>Teamonline Moments Grid</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {
  var m_Util = new MomentsUtil();
  data.momentsTable = 'x_aaro2_teamonline_moment'
  var filters = {
    all: function () { return 'approval=approved' },
    my: function () { return 'opened_by=' + gs.getUserID() },
    store: function () { return 'approval=approved^store=' + m_Util.getUserStore(gs.getUserID()).value },
    approvals: function () { return 'approval=requested' },
    custom: function () { return getCustomFilter() }
  }
  if (!input) {
    
    data.isLoggedIn = gs.getSession().isLoggedIn();
    data.canEdit = gs.getUser().isMemberOf(gs.getProperty("x_aaro2_teamonline.teamonline_administration_group")) || gs.hasRole("admin");
    data.submitFormWidget = 'teamonline_moment_submit_form';
    data.commentsEnabled = gs.getProperty('x_aaro2_teamonline.moment_comments_enabled', "false") === "true";
    data.filter = getDefaultFilter(data.canEdit);
    data.moments = m_Util.getFilteredNext(filters[data.filter](), '', 9, skipRejectedImages(data.filter));
  }
  if (input && input.action==='loading') {
    data.nextMoments = m_Util.getFilteredNext(filters[input.filter](), input.lastDateTime, input.count, skipRejectedImages(input));
  }
  if(input && input.action === 'approval'){
    m_Util.approveAction(input, input.approval, input.approveState);
    data.moments = m_Util.getFilteredNext(filters.approvals(), skipRejectedImages(input.filter))
    data.approvalsCount = m_Util.getApprovalsCount();
  }

  function getDefaultFilter(canEdit){
    var paramFilter = $sp.getParameter('filter')|| 'all';
    return (paramFilter === 'approvals' && !data.canEdit)? 'all': paramFilter
  }
  function getCustomFilter() {
    var filterString = filters.all() +
      (input.store ? '^store=' + input.store : '') +
      (input.user ? '^opened_by=' + input.user : '') +
      (input.caption ? '^captionLIKE' + input.caption : '')
    return filterString;
  }
  function skipRejectedImages(filter){
    return (filter !== 'my' && filter !== 'approvals')
  }
})();

]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>andrey.mironyuk</sys_created_by>
        <sys_created_on>2020-09-03 08:33:18</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>c82e4c5ddb4f9450389b84d868961992</sys_id>
        <sys_mod_count>366</sys_mod_count>
        <sys_name>Teamonline Moments Grid</sys_name>
        <sys_package display_value="TEAMonline" source="x_aaro2_teamonline">a2dfc25fdb7244105f65ba03e29619fa</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TEAMonline">a2dfc25fdb7244105f65ba03e29619fa</sys_scope>
        <sys_update_name>sp_widget_c82e4c5ddb4f9450389b84d868961992</sys_update_name>
        <sys_updated_by>andrey.mironyuk</sys_updated_by>
        <sys_updated_on>2020-09-24 15:25:04</sys_updated_on>
        <template><![CDATA[<div>
  <div class="moments-grid-container" in-view-container>
    <div class="no-moments-message" ng-if="data.moments.length==0">
      <span> ${tom_no_moments_emoji}</span>
    </div>
    <moment 
      ng-repeat="(key, moment) in data.moments" 
      key="key"
      moment="moment"
      template-url="moment.html"
      is-logged-in="data.isLoggedIn"
      can-edit="data.canEdit"
      active-allowed="c.filter=='approvals'"
      in-view="loadMore($last, $inview)"/>
    <div class="loader-container" ng-show="loading">
      <div class="lds-ripple">
        <div></div>
        <div></div>
        <div></div>
      </div>
    </div>
  </div>
  <teamonline-gallery 
    template-url="moment-gallery.html"
    moments="data.moments"
    is-logged-in="data.isLoggedIn" />
</div>]]></template>
    </sp_widget>
</record_update>
