<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope) {
  /* widget controller */
  var c = this;
  c.loading = false;
  c.lastPage = false;
  c.filter = 'all'

  c.loadMore = (last, inview) => {
    
    if (!(last && inview) || c.lastPage) return;
    
    c.loading = true;
    
    const lastDateTime = c.data.moments[c.data.moments.length - 1].data.created_on
    const filter = c.filter;
    const count = 3
    c.server.get({ lastDateTime, filter, count }).then(resp => {

      if (resp.data.nextMoments.length == 0)
        c.lastPage = true;

      c.data.moments = [...c.data.moments, ...resp.data.nextMoments]
      c.loading = false;
    })
  }

  $scope.setFilter = (filter) => {
    c.lastPage = false;
    scrollTop()
    c.filter = filter;
    c.loading = true;
    const count = 6;
    c.server.get({filter, count}).then(resp =>{
      c.data.moments = resp.data.nextMoments;
      c.loading = false;
      c.loadMore(true, true)
    })
  }
  var gallery = document.getElementsByClassName('moment-gallery')[0];
  $scope.openImage = function (momentIndex, imageIndex) {
    $scope.selectedMomentIndex = momentIndex;
    $scope.selectedMoment = $scope.data.moments[momentIndex]
    $scope.selectedImageIndex = imageIndex;
    gallery.classList.add('active')
  }
  $(document).keydown(function (e) {
    // ESCAPE key pressed
    if (e.keyCode == 27) {
      $scope.closeGallery()
    }
  });
  function scrollTop(){
    document.getElementsByClassName('moments-grid-container')[0].scrollTop = 0;
  }
  $scope.closeGallery = function () {
    $scope.selectedMoment = {}
    gallery.classList.remove('active');

  }
  $scope.selectImage = function (index) {
    $scope.selectedImageIndex = index
  }
  $scope.iterateImage = function (amount) {
    var length = $scope.data.moments[$scope.selectedMomentIndex].attachments.length
    if ($scope.selectedImageIndex + amount > length - 1) $scope.selectedImageIndex = 0;
    else if ($scope.selectedImageIndex + amount < 0) $scope.selectedImageIndex = length - 1;
    else $scope.selectedImageIndex += amount;
  }
  $scope.iterateMoment = function (amount) {
    var length = $scope.data.moments.length
    if ($scope.selectedMomentIndex + amount > length - 1) $scope.selectedMomentIndex = 0;
    else if ($scope.selectedMomentIndex + amount < 0) $scope.selectedMomentIndex = length - 1;
    else $scope.selectedMomentIndex += amount;
    $scope.selectedMoment = $scope.data.moments[$scope.selectedMomentIndex]
    $scope.selectedImageIndex = 0;
  }

  /* context Menu */
  $scope.contextMenu = function (moment) {
    if (!$scope.data.canEdit) { return [] }
    return [
      ['Archive', function ($itemScope) {
        var currentScope = getCurrentScopeByMethod($itemScope, 'archive');
        currentScope.archive(moment);
      }]
    ]
  }

  /* returs current scope */
  function getCurrentScopeByMethod(scope, method) {
    var currentScope = scope;
    var i = 0;
    while (!currentScope.hasOwnProperty(method) && i < 10) {
      currentScope = currentScope.$parent;
      i++;
    }
    return currentScope;
  }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>$blue: #0069c8;&#13;
$darkgrey: #2f2f2f;&#13;
.filters-container,&#13;
.moments-grid-container {&#13;
  display: flex;&#13;
  transition: all 300ms ease-in-out;&#13;
}&#13;
.filters-container {&#13;
  margin: 5px 0;&#13;
  height: 4rem;&#13;
  background-color: white;&#13;
  justify-content: center;&#13;
  border: 1px solid #eee;&#13;
}&#13;
.filter-button {&#13;
  border-bottom: 1px solid #999;&#13;
  width: 16rem;&#13;
  display: flex;&#13;
  place-items: center;&#13;
  justify-content: center;&#13;
  color: #999;&#13;
  font-size: 1.2rem;&#13;
  i {&#13;
    margin-right: 1rem;&#13;
  }&#13;
  cursor: pointer;&#13;
  &amp;:hover {&#13;
    color: $darkgrey;&#13;
  }&#13;
  &amp;.active {&#13;
    border-bottom-color: $darkgrey;&#13;
    color: $darkgrey;&#13;
  }&#13;
}&#13;
.moments-grid-container {&#13;
  flex-flow: row wrap;&#13;
  justify-content: flex-start;&#13;
  max-height: 81vh;&#13;
  min-height: 81vh;&#13;
  overflow-y: auto;&#13;
  &amp;::-webkit-scrollbar {&#13;
    width: 0.5em;&#13;
  }&#13;
  &amp;::-webkit-scrollbar-thumb {&#13;
    background-color: darkgrey;&#13;
  }&#13;
}&#13;
&#13;
$blue: #0069c8;&#13;
#moments-container {&#13;
  margin-bottom: 10px;&#13;
}&#13;
&#13;
.moment {&#13;
  width: 36.4rem;&#13;
  margin: 5px;&#13;
  transition: all 300ms ease-in-out;&#13;
  &amp;.ng-enter,&#13;
  &amp;.ng-leave,&#13;
  &amp;.ng-move {&#13;
    transition: 0.5s linear all;&#13;
  }&#13;
&#13;
  &amp;.ng-enter,&#13;
  &amp;.ng-move {&#13;
    opacity: 0;&#13;
  }&#13;
&#13;
  &amp;.ng-enter.ng-enter-active,&#13;
  &amp;.ng-move.ng-move-active {&#13;
    opacity: 1;&#13;
  }&#13;
&#13;
  &amp;.ng-leave {&#13;
    opacity: 1;&#13;
  }&#13;
&#13;
  &amp;.ng-leave.ng-leave-active {&#13;
    opacity: 0;&#13;
  }&#13;
}&#13;
.moment-image-container {&#13;
  width: 100%;&#13;
  height: 27.2rem;&#13;
  display: flex;&#13;
  place-content: center;&#13;
  justify-content: center;&#13;
}&#13;
.loader-container {&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  display: flex;&#13;
  justify-content: center;&#13;
  transition: all 300ms ease-in-out;&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>teamonline_moments_grid</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) { 

 }]]></link>
        <name>Teamonline Moments Grid</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  var m_Util = new MomentsUtil();
  var filters = {
    all: 'approval=approved',
    my: 'sys_created_by='+gs.getUserName(),
    store: 'store='+m_Util.getUserStore(gs.getUserID()).value,
    approvals: 'approval=not_approved'
  }
  if(!input){
    data.moments = m_Util.getFilteredNext(filters.all, '', 6);
    data.isLoggedIn = gs.getSession().isLoggedIn();
    data.canEdit = gs.getUser().isMemberOf(gs.getProperty("x_aaro2_teamonline.teamonline_administration_group")) || gs.hasRole("admin");
  }
  if(input){
    console.log(input)
    console.log(filters[input.filter])
    data.nextMoments = m_Util.getFilteredNext(filters[input.filter], input.lastDateTime, input.count);
  }
  

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>andrey.mironyuk</sys_created_by>
        <sys_created_on>2020-09-03 08:33:18</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>c82e4c5ddb4f9450389b84d868961992</sys_id>
        <sys_mod_count>126</sys_mod_count>
        <sys_name>Teamonline Moments Grid</sys_name>
        <sys_package display_value="TEAMonline" source="x_aaro2_teamonline">a2dfc25fdb7244105f65ba03e29619fa</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TEAMonline">a2dfc25fdb7244105f65ba03e29619fa</sys_scope>
        <sys_update_name>sp_widget_c82e4c5ddb4f9450389b84d868961992</sys_update_name>
        <sys_updated_by>andrey.mironyuk</sys_updated_by>
        <sys_updated_on>2020-09-11 13:04:15</sys_updated_on>
        <template><![CDATA[<div>
  <div class="filters-container">
    <div class="filter-button" ng-class="{active: c.filter=='all'}" ng-click="setFilter('all')">
      <i class="fa fa-th"></i>
      <span> All Moments </span>
    </div>
    <div class="filter-button" ng-class="{active: c.filter=='my'}" ng-click="setFilter('my')">
      <i class="fa fa-user"></i>
      <span> My Moments </span>
    </div>
    <div class="filter-button" ng-class="{active: c.filter=='store'}" ng-click="setFilter('store')">
      <i class="fa fa-location-arrow"></i>
      <span> My Store Moments </span>
    </div>
    <div class="filter-button" ng-class="{active: c.filter=='approvals'}" ng-click="setFilter('approvals')">
      <i class="fa fa-check-circle-o"></i>
      <span> My Approvals </span>
      <div class="counter">2</div>
    </div>
  </div>
  <div class="moments-grid-container" in-view-container>
    <div class="moment" ng-repeat="(key,moment) in data.moments" in-view="c.loadMore($last, $inview)">
      <div class="avatar-timeago-container">
        <div ng-if="!data.isLoggedIn" class="avatar-large avatar-container">
          <div class="avatar soloAvatar">
            <div class="sub-avatar" style="background-image: url(c4436fe21b3250d0d6c54229bc4bcbac.iix)" />
          </div>
        </div>
        <sn-avatar ng-if="data.isLoggedIn" class="avatar-large" primary="moment.data.opened_by.id" />
        <div class="autror-container">
          <div class="author">{{moment.data.opened_by.name}} </div>
          <div class="location">
            <i class="fa fa-location-arrow"></i> {{moment.data.store.name}} ({{moment.data.store.description}}) 
          </div>
        </div>

      </div>

      <uib-carousel interval="0" template-url="/tpl.html">
        <uib-slide ng-repeat="slide in moment.attachments" active="slide.active">
          <div class="moment-image-container">
            <img class="moment-image" ng-src="{{slide.thumbnail_url}}" role="presentation"
              ng-click="openImage(key, $index)">
          </div>
        </uib-slide>
      </uib-carousel>
      <div class="caption-container">

        <div class="caption"><b>{{moment.data.opened_by.name}}:</b> <span></span> "{{moment.data.caption}}"
        </div>
        <div class="timeago">
          <i class="fa fa-clock-o"></i>
          <sn-time-ago timestamp="moment.data.created_on" />
        </div>
      </div>
    </div>
    <div class="loader-container" ng-show="c.loading">
      <div class="lds-ripple">
        <div></div>
        <div></div>
        <div></div>
      </div>
    </div>
    
  </div>
  <div class="moment-gallery">

    <div class="close-gallery-button" ng-click="closeGallery();stopPropagation();">
      <i class="fa fa-times"></i>
    </div>

    <div class="controls-container">
      <div class="image-control left" ng-click="iterateMoment(-1)"><i class="fa fa-chevron-left"></i></div>
      <div class="image-control right" ng-click="iterateMoment(1)"><i class="fa fa-chevron-right"></i></div>
    </div>
    <div class="gallery-container">

      <div class="gallery-left-container">
        <div class="gallery-carousel-container">
          <uib-carousel interval="0" template-url="/tpl.html" active="0">
            <uib-slide ng-repeat="slide in selectedMoment.attachments" actual="slide.active">
              <div class="gallery-image-container">
                <img class="moment-image" ng-src="{{slide.image_url}}" role="presentation">
              </div>
            </uib-slide>
          </uib-carousel>
        </div>
      </div>
      <div class="gallery-right-container">
        <div class="avatar-timeago-container">
          <div ng-if="!data.isLoggedIn" class="avatar-large avatar-container">
            <div class="avatar soloAvatar">
              <div class="sub-avatar" style="background-image: url(c4436fe21b3250d0d6c54229bc4bcbac.iix)" />
            </div>
          </div>
          <sn-avatar ng-if="data.isLoggedIn" class="avatar-large" primary="selectedMoment.data.opened_by.id" />
          <div class="autror-container">
            <div class="author"> {{selectedMoment.data.opened_by.name}} </div>
            <div class="location">
              <i class="fa fa-location-arrow"></i> {{selectedMoment.data.store.name}}({{selectedMoment.data.store.description}})
            </div>
          </div>
        </div>
        <div class="caption-container">
          <div class="caption"><b>{{selectedMoment.data.opened_by.name}}:</b> "{{selectedMoment.data.caption}}"</div>
          <div class="timeago">
            <i class="fa fa-clock-o"></i>
            <sn-time-ago timestamp="selectedMoment.data.created_on" />
          </div>
        </div>
      </div>
    </div>
  </div>
  <script type="text/ng-template" id="/tpl.html">
    <div class="carousel">
     <div class="carousel-inner" ng-transclude></div>
     <div class="carousel-controls">
       <div class="carousel-control left">
        <div role="button" href class="chevron-circle-left" ng-click="prev()" ng-class="{ disabled: isPrevDisabled() }" ng-show="slides.length > 1">
          <i class="fa fa-chevron-circle-left"></i>
        </div>
       </div>
       <div >
         <ol class="carousel-indicators" ng-show="slides.length > 1">
          <li ng-repeat="slide in slides | orderBy:indexOfSlide track by $index" ng-class="{ active: isActive(slide) }">
          </li>
         </ol>
       </div>
       <div class="carousel-control right" >
         <div role="button" href class="chevron-circle-right" ng-click="next()" ng-class="{ disabled: isNextDisabled() }" ng-show="slides.length > 1">
           <i class="fa fa-chevron-circle-right"></i>
         </div>
       </div>
     </div>
    </div>
  </script>
</div>]]></template>
    </sp_widget>
</record_update>
